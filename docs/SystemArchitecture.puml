@startuml
title System Architecture WebSocket

top to bottom direction

' Определяем палитру цветов для стрелок
!define COLOR_PAIR1 #F5F5F5
!define COLOR_PAIR2 #FF9999
!define COLOR_PAIR3 #99FF99
!define COLOR_PAIR4 #9999FF
!define COLOR_PAIR5 #FFFF99
!define COLOR_PAIR6 #FFCC99
!define COLOR_PAIR7 #FF99FF
!define COLOR_PAIR8 #99FFFF
!define COLOR_PAIR9 #FF6666
!define COLOR_PAIR10 #66FF66
!define COLOR_PAIR11 #6666FF
!define COLOR_PAIR12 #FFFF66
!define COLOR_PAIR13 #FFCC66
!define COLOR_PAIR14 #FF66FF
!define COLOR_PAIR15 #66FFFF
!define COLOR_PAIR16 #FF3333
!define COLOR_PAIR17 #33FF33
!define COLOR_PAIR18 #3333FF
!define COLOR_PAIR19 #FFFF33
!define COLOR_PAIR20 #FFCC33
!define COLOR_PAIR21 #FF33FF
!define COLOR_PAIR22 #33FFFF
!define COLOR_PAIR23 #FF0000
!define COLOR_PAIR24 #00FF00
!define COLOR_PAIR25 #0000FF
!define COLOR_PAIR26 #FFFF00
!define COLOR_PAIR27 #FF9900
!define COLOR_PAIR28 #99FF00
!define COLOR_PAIR29 #0099FF
!define COLOR_PAIR30 #FF00FF




package "WebSocket System" {

    ' Классы
    class ErrorHandler {
        +handleError()
        ' Комментарий: Обрабатывает ошибки и логирует исключения.
    }

    class IoServer {
        +handleConnection()
        ' Комментарий: Обрабатывает входящие соединения.
    }
    class HttpServer {
        +processHttpRequest()
        ' Комментарий: Обрабатывает HTTP-запросы для WebSocket-соединений.
    }
    class WsServer {
        +processWebSocketRequest()
        +routeMessage()
        ' Комментарий: Управляет WebSocket-соединениями и маршрутизацией сообщений.
    }
    class WebSocketRouter {
        +routeToChannel()
        ' Комментарий: Маршрутизирует сообщения в соответствующие каналы.
    }
    class ClientManager {
        +trackActiveConnections()
        +manageClient()
        ' Комментарий: Управляет активными соединениями клиентов.
    }
    class ChannelManager {
        +manageSubscriptions()
        +distributeMessages()
        +handlePresence()
        ' Комментарий: Управляет подписками, распределением сообщений и присутствием.
    }
    class SecurityModule {
        +authenticate()
        +authorize()
        ' Комментарий: Отвечает за аутентификацию и авторизацию.
    }
    class ChannelAuthorization {
        +authorizeUser()
        ' Комментарий: Проверяет доступ пользователя к каналу.
    }
    class BroadcastingModule {
        +broadcastMessage()
        ' Комментарий: Отвечает за рассылку сообщений.
    }
    class MonitoringModule {
        +logEvents()
        +monitorSystem()
        +collectMetrics()
        ' Комментарий: Осуществляет мониторинг и логирование.
    }
    class Queue {
        +handleAsyncTasks()
        ' Комментарий: Управляет асинхронными задачами и обработкой сообщений.
    }
    class Redis {
        +cacheData()
        +handleInterProcessCommunication()
        ' Комментарий: Кэширует данные и обеспечивает IPC.
    }
    class ChannelFactory {
        +createChannel()
        ' Комментарий: Создает различные типы каналов.
    }
    class ExceptionLogger {
        +logException()
        ' Комментарий: Логирует исключения.
    }
    class UserRepository {
        +manageUserData()
        ' Комментарий: Управляет данными пользователей.
    }
    class ChannelRepository {
        +manageChannelData()
        ' Комментарий: Управляет данными каналов.
    }
    class RateLimiter {
        +limitRequests()
        ' Комментарий: Ограничивает количество запросов от клиента.
    }
    class WebSocketHandlers {
        +handleMessage()
        +handleEvent()
        ' Комментарий: Обрабатывает сообщения и события от клиентов.
    }

    ' Связи между классами
    ErrorHandler -[COLOR_PAIR1]-> ExceptionLogger : <color:#99FF99>логирует исключения</color>
    IoServer -[COLOR_PAIR2]-> HttpServer : <color:#FF9999>обрабатывает соединение</color>
    HttpServer -[COLOR_PAIR2]-> WsServer : <color:#FF9999>передает запросы</color>
    WsServer -[COLOR_PAIR3]-> WebSocketRouter : <color:#99FF99>маршрутизирует сообщение</color>
    WsServer -[COLOR_PAIR3]-> ClientManager : <color:#99FF99>управляет соединениями</color>
    WsServer -[COLOR_PAIR4]-> SecurityModule : <color:#9999FF>проверяет аутентификацию</color>
    SecurityModule -[COLOR_PAIR4]-> ChannelAuthorization : <color:#9999FF>проверяет доступ к каналу</color>
    WsServer -[COLOR_PAIR5]-> WebSocketHandlers : <color:#FFFF99>обрабатывает сообщения и события</color>
    ClientManager -[COLOR_PAIR5]-> SecurityModule : <color:#FFFF99>проверяет подлинность</color>
    ChannelManager -[COLOR_PAIR6]-> WebSocketRouter : <color:#FFCC99>маршрутизация в каналы</color>
    ChannelManager -[COLOR_PAIR6]-> BroadcastingModule : <color:#FFCC99>рассылка сообщений</color>
    ChannelManager -[COLOR_PAIR1]-> MonitoringModule : <color:#999999>мониторинг активности</color>
    ChannelManager -[COLOR_PAIR1]-> RateLimiter : <color:#999999>ограничение запросов</color>
    ChannelManager -[COLOR_PAIR2]-> WebSocketHandlers : <color:#FF9999>обработка сообщений и событий</color>
    ChannelManager -[COLOR_PAIR2]-> Redis : <color:#FF9999>кэширование данных</color>
    ChannelManager -[COLOR_PAIR3]-> ChannelFactory : <color:#99FF99>создание каналов</color>
    MonitoringModule -[COLOR_PAIR3]-> Redis : <color:#99FF99>хранение метрик</color>
    BroadcastingModule -[COLOR_PAIR4]-> Queue : <color:#9999FF>обработка асинхронных задач</color>
    Queue -[COLOR_PAIR4]-> Redis : <color:#9999FF>поддерживает IPC и кэширование</color>
    IoServer -[COLOR_PAIR5]-> ErrorHandler : <color:#FFFF99>обрабатывает ошибки</color>
    HttpServer -[COLOR_PAIR5]-> ErrorHandler : <color:#FFFF99>передает ошибки</color>
    WsServer -[COLOR_PAIR6]-> ErrorHandler : <color:#FFCC99>обрабатывает ошибки</color>
    WebSocketRouter -[COLOR_PAIR6]-> ErrorHandler : <color:#FFCC99>отправляет ошибки</color>
    ClientManager -[COLOR_PAIR1]-> ErrorHandler : <color:#999999>передает ошибки</color>
    ChannelManager -[COLOR_PAIR1]-> ErrorHandler : <color:#999999>передает ошибки</color>
    SecurityModule -[COLOR_PAIR2]-> ErrorHandler : <color:#FF9999>обрабатывает ошибки</color>
    BroadcastingModule -[COLOR_PAIR2]-> ErrorHandler : <color:#FF9999>обрабатывает ошибки</color>
    Queue -[COLOR_PAIR3]-> ErrorHandler : <color:#99FF99>передает ошибки</color>
    ClientManager -[COLOR_PAIR3]-> UserRepository : <color:#99FF99>управляет данными пользователей</color>
    ChannelManager -[COLOR_PAIR4]-> ChannelRepository : <color:#9999FF>управляет данными каналов</color>
    RateLimiter -[COLOR_PAIR4]-> WebSocketHandlers : <color:#9999FF>ограничивает запросы</color>
    ChannelAuthorization -[COLOR_PAIR5]-> ChannelManager : <color:#FFFF99>проверяет доступ к каналам</color>
}

@enduml
